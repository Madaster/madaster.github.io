/* 
 * Madaster Private API
 *
 * The Madaster Private API endpoint.
 *
 * OpenAPI spec version: 1.1
 * Contact: service@madaster.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing BuildingFileElementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BuildingFileElementApiTests
    {
        private BuildingFileElementApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BuildingFileElementApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BuildingFileElementApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BuildingFileElementApi
            //Assert.IsInstanceOfType(typeof(BuildingFileElementApi), instance, "instance is a BuildingFileElementApi");
        }

        
        /// <summary>
        /// Test ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdDelete
        /// </summary>
        [Test]
        public void ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? buildingId = null;
            //Guid? fileId = null;
            //string id = null;
            //instance.ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdDelete(buildingId, fileId, id);
            
        }
        
        /// <summary>
        /// Test ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdGet
        /// </summary>
        [Test]
        public void ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? buildingId = null;
            //Guid? fileId = null;
            //string id = null;
            //var response = instance.ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdGet(buildingId, fileId, id);
            //Assert.IsInstanceOf<BuildingFileElement> (response, "response is BuildingFileElement");
        }
        
        /// <summary>
        /// Test ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdPut
        /// </summary>
        [Test]
        public void ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? buildingId = null;
            //Guid? fileId = null;
            //string id = null;
            //V11CreateBuildingFileElementRequest updateElementRequest = null;
            //var response = instance.ApiV11BuildingsByBuildingIdFilesByFileIdElementsByIdPut(buildingId, fileId, id, updateElementRequest);
            //Assert.IsInstanceOf<BuildingFileElement> (response, "response is BuildingFileElement");
        }
        
        /// <summary>
        /// Test ApiV11BuildingsByBuildingIdFilesByFileIdElementsGet
        /// </summary>
        [Test]
        public void ApiV11BuildingsByBuildingIdFilesByFileIdElementsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? buildingId = null;
            //Guid? fileId = null;
            //var response = instance.ApiV11BuildingsByBuildingIdFilesByFileIdElementsGet(buildingId, fileId);
            //Assert.IsInstanceOf<List<BuildingFileElement>> (response, "response is List<BuildingFileElement>");
        }
        
        /// <summary>
        /// Test ApiV11BuildingsByBuildingIdFilesByFileIdElementsPost
        /// </summary>
        [Test]
        public void ApiV11BuildingsByBuildingIdFilesByFileIdElementsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? buildingId = null;
            //Guid? fileId = null;
            //V11CreateBuildingFileElementRequest createElementRequest = null;
            //var response = instance.ApiV11BuildingsByBuildingIdFilesByFileIdElementsPost(buildingId, fileId, createElementRequest);
            //Assert.IsInstanceOf<BuildingFileElement> (response, "response is BuildingFileElement");
        }
        
    }

}
