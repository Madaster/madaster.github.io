/* 
 * Madaster Private API
 *
 * The Madaster Private API endpoint.
 *
 * OpenAPI spec version: 1.1
 * Contact: service@madaster.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing BuildingFileResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class BuildingFileResponseTests
    {
        // TODO uncomment below to declare an instance variable for BuildingFileResponse
        //private BuildingFileResponse instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of BuildingFileResponse
            //instance = new BuildingFileResponse();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BuildingFileResponse
        /// </summary>
        [Test]
        public void BuildingFileResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" BuildingFileResponse
            //Assert.IsInstanceOfType<BuildingFileResponse> (instance, "variable 'instance' is a BuildingFileResponse");
        }


        /// <summary>
        /// Test the property 'BuildingId'
        /// </summary>
        [Test]
        public void BuildingIdTest()
        {
            // TODO unit test for the property 'BuildingId'
        }
        /// <summary>
        /// Test the property 'IsActive'
        /// </summary>
        [Test]
        public void IsActiveTest()
        {
            // TODO unit test for the property 'IsActive'
        }
        /// <summary>
        /// Test the property 'IsDirty'
        /// </summary>
        [Test]
        public void IsDirtyTest()
        {
            // TODO unit test for the property 'IsDirty'
        }
        /// <summary>
        /// Test the property 'FileName'
        /// </summary>
        [Test]
        public void FileNameTest()
        {
            // TODO unit test for the property 'FileName'
        }
        /// <summary>
        /// Test the property 'FileSize'
        /// </summary>
        [Test]
        public void FileSizeTest()
        {
            // TODO unit test for the property 'FileSize'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'LastModifiedDate'
        /// </summary>
        [Test]
        public void LastModifiedDateTest()
        {
            // TODO unit test for the property 'LastModifiedDate'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Test]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
        /// <summary>
        /// Test the property 'Validation'
        /// </summary>
        [Test]
        public void ValidationTest()
        {
            // TODO unit test for the property 'Validation'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

    }

}
