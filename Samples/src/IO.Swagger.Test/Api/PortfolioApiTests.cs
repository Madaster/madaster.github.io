/* 
 * Madaster Private API
 *
 * The Madaster Private API endpoint.
 *
 * OpenAPI spec version: 1.1
 * Contact: service@madaster.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing PortfolioApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PortfolioApiTests
    {
        private PortfolioApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PortfolioApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PortfolioApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PortfolioApi
            //Assert.IsInstanceOfType(typeof(PortfolioApi), instance, "instance is a PortfolioApi");
        }

        
        /// <summary>
        /// Test ApiV11PortfoliosByIdBuildingsGet
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdBuildingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.ApiV11PortfoliosByIdBuildingsGet(id);
            //Assert.IsInstanceOf<List<BuildingResponse>> (response, "response is List<BuildingResponse>");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdDelete
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //instance.ApiV11PortfoliosByIdDelete(id);
            
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdGet
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.ApiV11PortfoliosByIdGet(id);
            //Assert.IsInstanceOf<PortfolioResponse> (response, "response is PortfolioResponse");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdLogoPost
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdLogoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //System.IO.Stream attachment = null;
            //var response = instance.ApiV11PortfoliosByIdLogoPost(id, attachment);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdPassportPost
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdPassportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //V11CreatePassportRequest createPassportRequest = null;
            //string acceptLanguage = null;
            //var response = instance.ApiV11PortfoliosByIdPassportPost(id, createPassportRequest, acceptLanguage);
            //Assert.IsInstanceOf<V11PortfolioFileResponse> (response, "response is V11PortfolioFileResponse");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdPut
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //PortfolioRequest portfolio = null;
            //var response = instance.ApiV11PortfoliosByIdPut(id, portfolio);
            //Assert.IsInstanceOf<PortfolioResponse> (response, "response is PortfolioResponse");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdUsersGet
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdUsersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.ApiV11PortfoliosByIdUsersGet(id);
            //Assert.IsInstanceOf<List<V11UserRightResponse>> (response, "response is List<V11UserRightResponse>");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosByIdUsersPut
        /// </summary>
        [Test]
        public void ApiV11PortfoliosByIdUsersPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //List<V11UserRightRequest> users = null;
            //var response = instance.ApiV11PortfoliosByIdUsersPut(id, users);
            //Assert.IsInstanceOf<V11UserRightResponse> (response, "response is V11UserRightResponse");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosGet
        /// </summary>
        [Test]
        public void ApiV11PortfoliosGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiV11PortfoliosGet();
            //Assert.IsInstanceOf<List<PortfolioResponse>> (response, "response is List<PortfolioResponse>");
        }
        
        /// <summary>
        /// Test ApiV11PortfoliosPost
        /// </summary>
        [Test]
        public void ApiV11PortfoliosPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PortfolioRequest portfolio = null;
            //var response = instance.ApiV11PortfoliosPost(portfolio);
            //Assert.IsInstanceOf<PortfolioResponse> (response, "response is PortfolioResponse");
        }
        
    }

}
