<?php
/**
 * ProductChildCircularInformation
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Madaster Private API
 *
 * The Madaster Private API endpoint.
 *
 * OpenAPI spec version: 1.1
 * Contact: service@madaster.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ProductChildCircularInformation Class Doc Comment
 *
 * @category Class
 * @description Circular information about a product child
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductChildCircularInformation implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProductChildCircularInformation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'inherit_feedstock_percentages' => 'bool',
        'recycled_percentage_feedstock' => 'double',
        'rapid_renewables_percentage_feedstock' => 'double',
        'inherit_end_of_life_percentages' => 'bool',
        'recycled_percentage_end_of_life' => 'double',
        'landfill_percentage_end_of_life' => 'double',
        'inherit_efficiency_percentages' => 'bool',
        'efficiency_percentage_recycling_feedstock' => 'double',
        'efficiency_percentage_recycling_end_of_life' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'inherit_feedstock_percentages' => null,
        'recycled_percentage_feedstock' => 'double',
        'rapid_renewables_percentage_feedstock' => 'double',
        'inherit_end_of_life_percentages' => null,
        'recycled_percentage_end_of_life' => 'double',
        'landfill_percentage_end_of_life' => 'double',
        'inherit_efficiency_percentages' => null,
        'efficiency_percentage_recycling_feedstock' => 'double',
        'efficiency_percentage_recycling_end_of_life' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'inherit_feedstock_percentages' => 'inheritFeedstockPercentages',
        'recycled_percentage_feedstock' => 'recycledPercentageFeedstock',
        'rapid_renewables_percentage_feedstock' => 'rapidRenewablesPercentageFeedstock',
        'inherit_end_of_life_percentages' => 'inheritEndOfLifePercentages',
        'recycled_percentage_end_of_life' => 'recycledPercentageEndOfLife',
        'landfill_percentage_end_of_life' => 'landfillPercentageEndOfLife',
        'inherit_efficiency_percentages' => 'inheritEfficiencyPercentages',
        'efficiency_percentage_recycling_feedstock' => 'efficiencyPercentageRecyclingFeedstock',
        'efficiency_percentage_recycling_end_of_life' => 'efficiencyPercentageRecyclingEndOfLife'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'inherit_feedstock_percentages' => 'setInheritFeedstockPercentages',
        'recycled_percentage_feedstock' => 'setRecycledPercentageFeedstock',
        'rapid_renewables_percentage_feedstock' => 'setRapidRenewablesPercentageFeedstock',
        'inherit_end_of_life_percentages' => 'setInheritEndOfLifePercentages',
        'recycled_percentage_end_of_life' => 'setRecycledPercentageEndOfLife',
        'landfill_percentage_end_of_life' => 'setLandfillPercentageEndOfLife',
        'inherit_efficiency_percentages' => 'setInheritEfficiencyPercentages',
        'efficiency_percentage_recycling_feedstock' => 'setEfficiencyPercentageRecyclingFeedstock',
        'efficiency_percentage_recycling_end_of_life' => 'setEfficiencyPercentageRecyclingEndOfLife'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'inherit_feedstock_percentages' => 'getInheritFeedstockPercentages',
        'recycled_percentage_feedstock' => 'getRecycledPercentageFeedstock',
        'rapid_renewables_percentage_feedstock' => 'getRapidRenewablesPercentageFeedstock',
        'inherit_end_of_life_percentages' => 'getInheritEndOfLifePercentages',
        'recycled_percentage_end_of_life' => 'getRecycledPercentageEndOfLife',
        'landfill_percentage_end_of_life' => 'getLandfillPercentageEndOfLife',
        'inherit_efficiency_percentages' => 'getInheritEfficiencyPercentages',
        'efficiency_percentage_recycling_feedstock' => 'getEfficiencyPercentageRecyclingFeedstock',
        'efficiency_percentage_recycling_end_of_life' => 'getEfficiencyPercentageRecyclingEndOfLife'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['inherit_feedstock_percentages'] = isset($data['inherit_feedstock_percentages']) ? $data['inherit_feedstock_percentages'] : null;
        $this->container['recycled_percentage_feedstock'] = isset($data['recycled_percentage_feedstock']) ? $data['recycled_percentage_feedstock'] : null;
        $this->container['rapid_renewables_percentage_feedstock'] = isset($data['rapid_renewables_percentage_feedstock']) ? $data['rapid_renewables_percentage_feedstock'] : null;
        $this->container['inherit_end_of_life_percentages'] = isset($data['inherit_end_of_life_percentages']) ? $data['inherit_end_of_life_percentages'] : null;
        $this->container['recycled_percentage_end_of_life'] = isset($data['recycled_percentage_end_of_life']) ? $data['recycled_percentage_end_of_life'] : null;
        $this->container['landfill_percentage_end_of_life'] = isset($data['landfill_percentage_end_of_life']) ? $data['landfill_percentage_end_of_life'] : null;
        $this->container['inherit_efficiency_percentages'] = isset($data['inherit_efficiency_percentages']) ? $data['inherit_efficiency_percentages'] : null;
        $this->container['efficiency_percentage_recycling_feedstock'] = isset($data['efficiency_percentage_recycling_feedstock']) ? $data['efficiency_percentage_recycling_feedstock'] : null;
        $this->container['efficiency_percentage_recycling_end_of_life'] = isset($data['efficiency_percentage_recycling_end_of_life']) ? $data['efficiency_percentage_recycling_end_of_life'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets inherit_feedstock_percentages
     *
     * @return bool
     */
    public function getInheritFeedstockPercentages()
    {
        return $this->container['inherit_feedstock_percentages'];
    }

    /**
     * Sets inherit_feedstock_percentages
     *
     * @param bool $inherit_feedstock_percentages Whether the feedstock percentages should be inherited from the child
     *
     * @return $this
     */
    public function setInheritFeedstockPercentages($inherit_feedstock_percentages)
    {
        $this->container['inherit_feedstock_percentages'] = $inherit_feedstock_percentages;

        return $this;
    }

    /**
     * Gets recycled_percentage_feedstock
     *
     * @return double
     */
    public function getRecycledPercentageFeedstock()
    {
        return $this->container['recycled_percentage_feedstock'];
    }

    /**
     * Sets recycled_percentage_feedstock
     *
     * @param double $recycled_percentage_feedstock The percentage of the material's feedstock that comes from recycled sources
     *
     * @return $this
     */
    public function setRecycledPercentageFeedstock($recycled_percentage_feedstock)
    {
        $this->container['recycled_percentage_feedstock'] = $recycled_percentage_feedstock;

        return $this;
    }

    /**
     * Gets rapid_renewables_percentage_feedstock
     *
     * @return double
     */
    public function getRapidRenewablesPercentageFeedstock()
    {
        return $this->container['rapid_renewables_percentage_feedstock'];
    }

    /**
     * Sets rapid_renewables_percentage_feedstock
     *
     * @param double $rapid_renewables_percentage_feedstock The percentage of the material's feedstock that comes from rapidly renewable sources
     *
     * @return $this
     */
    public function setRapidRenewablesPercentageFeedstock($rapid_renewables_percentage_feedstock)
    {
        $this->container['rapid_renewables_percentage_feedstock'] = $rapid_renewables_percentage_feedstock;

        return $this;
    }

    /**
     * Gets inherit_end_of_life_percentages
     *
     * @return bool
     */
    public function getInheritEndOfLifePercentages()
    {
        return $this->container['inherit_end_of_life_percentages'];
    }

    /**
     * Sets inherit_end_of_life_percentages
     *
     * @param bool $inherit_end_of_life_percentages Whether the end of life percentages should be inherited from the child
     *
     * @return $this
     */
    public function setInheritEndOfLifePercentages($inherit_end_of_life_percentages)
    {
        $this->container['inherit_end_of_life_percentages'] = $inherit_end_of_life_percentages;

        return $this;
    }

    /**
     * Gets recycled_percentage_end_of_life
     *
     * @return double
     */
    public function getRecycledPercentageEndOfLife()
    {
        return $this->container['recycled_percentage_end_of_life'];
    }

    /**
     * Sets recycled_percentage_end_of_life
     *
     * @param double $recycled_percentage_end_of_life The percentage of the material that can be recycled at its end of life
     *
     * @return $this
     */
    public function setRecycledPercentageEndOfLife($recycled_percentage_end_of_life)
    {
        $this->container['recycled_percentage_end_of_life'] = $recycled_percentage_end_of_life;

        return $this;
    }

    /**
     * Gets landfill_percentage_end_of_life
     *
     * @return double
     */
    public function getLandfillPercentageEndOfLife()
    {
        return $this->container['landfill_percentage_end_of_life'];
    }

    /**
     * Sets landfill_percentage_end_of_life
     *
     * @param double $landfill_percentage_end_of_life The percentage of the material that will go to the landfill at its end of life
     *
     * @return $this
     */
    public function setLandfillPercentageEndOfLife($landfill_percentage_end_of_life)
    {
        $this->container['landfill_percentage_end_of_life'] = $landfill_percentage_end_of_life;

        return $this;
    }

    /**
     * Gets inherit_efficiency_percentages
     *
     * @return bool
     */
    public function getInheritEfficiencyPercentages()
    {
        return $this->container['inherit_efficiency_percentages'];
    }

    /**
     * Sets inherit_efficiency_percentages
     *
     * @param bool $inherit_efficiency_percentages Whether the efficiency percentages should be inherited from the child
     *
     * @return $this
     */
    public function setInheritEfficiencyPercentages($inherit_efficiency_percentages)
    {
        $this->container['inherit_efficiency_percentages'] = $inherit_efficiency_percentages;

        return $this;
    }

    /**
     * Gets efficiency_percentage_recycling_feedstock
     *
     * @return double
     */
    public function getEfficiencyPercentageRecyclingFeedstock()
    {
        return $this->container['efficiency_percentage_recycling_feedstock'];
    }

    /**
     * Sets efficiency_percentage_recycling_feedstock
     *
     * @param double $efficiency_percentage_recycling_feedstock The efficiency of the recycling process that led to the feedstock
     *
     * @return $this
     */
    public function setEfficiencyPercentageRecyclingFeedstock($efficiency_percentage_recycling_feedstock)
    {
        $this->container['efficiency_percentage_recycling_feedstock'] = $efficiency_percentage_recycling_feedstock;

        return $this;
    }

    /**
     * Gets efficiency_percentage_recycling_end_of_life
     *
     * @return double
     */
    public function getEfficiencyPercentageRecyclingEndOfLife()
    {
        return $this->container['efficiency_percentage_recycling_end_of_life'];
    }

    /**
     * Sets efficiency_percentage_recycling_end_of_life
     *
     * @param double $efficiency_percentage_recycling_end_of_life The efficiency of the recycling process when the material reaches its end of life
     *
     * @return $this
     */
    public function setEfficiencyPercentageRecyclingEndOfLife($efficiency_percentage_recycling_end_of_life)
    {
        $this->container['efficiency_percentage_recycling_end_of_life'] = $efficiency_percentage_recycling_end_of_life;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


